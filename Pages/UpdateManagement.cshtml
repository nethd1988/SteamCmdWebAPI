@page
@model SteamCmdWebAPI.Pages.UpdateManagementModel
@{
    ViewData["Title"] = "Quản lý cập nhật";
    ViewData["ActivePage"] = "UpdateManagement";
}

<div class="page-header">
    <h1>Quản lý cập nhật game</h1>
</div>

@if (!string.IsNullOrEmpty(Model.StatusMessage))
{
    <div class="alert @(Model.IsSuccess ? "alert-success" : "alert-danger")">
        <i class="bi bi-@(Model.IsSuccess ? "check-circle" : "exclamation-triangle") me-2"></i>
        @Model.StatusMessage
    </div>
}

<form method="post" id="antiForgeryForm">
    @Html.AntiForgeryToken()
</form>

<!-- Thêm form xóa profile -->
<form method="post" id="deleteProfileForm" asp-page-handler="DeleteProfile">
    @Html.AntiForgeryToken()
    <input type="hidden" id="deleteProfileId" name="profileId" value="" />
</form>

<div class="card mb-4">
    <div class="card-header bg-primary text-white">
        <h5 class="mb-0">Thao tác thủ công</h5>
    </div>
    <div class="card-body">
        <div class="mb-3">
            <p>Sử dụng các nút dưới đây để kiểm tra cập nhật ngay lập tức hoặc xóa cache thông tin cập nhật.</p>
            <div class="d-flex gap-2 flex-wrap">
                <button id="checkUpdatesBtn" class="btn btn-primary">
                    <i class="bi bi-cloud-download me-1"></i> Kiểm tra cập nhật ngay
                </button>
                <button id="clearCacheBtn" class="btn btn-secondary">
                    <i class="bi bi-trash me-1"></i> Xóa cache cập nhật
                </button>
            </div>
        </div>
        <div class="alert alert-info">
            <i class="bi bi-info-circle me-2"></i>
            <strong>Lưu ý:</strong> "Kiểm tra cập nhật ngay" sẽ kiểm tra tất cả profile và thêm các game có cập nhật mới vào hàng đợi.
            "Xóa cache cập nhật" sẽ buộc hệ thống tải lại thông tin từ Steam API ở lần kiểm tra tiếp theo.
        </div>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header bg-success text-white">
        <h5 class="mb-0">Cài đặt kiểm tra cập nhật tự động</h5>
    </div>
    <div class="card-body">
        <form method="post" asp-page-handler="SaveUpdateCheckSettings">
            @Html.AntiForgeryToken()
            <div class="form-check mb-3">
                <input type="checkbox" class="form-check-input" id="updateCheckEnabled" asp-for="UpdateCheckEnabled" />
                <label class="form-check-label" for="updateCheckEnabled">Kích hoạt kiểm tra cập nhật tự động</label>
            </div>
            <div class="mb-3">
                <label for="updateCheckIntervalMinutes" class="form-label">Khoảng thời gian kiểm tra (phút)</label>
                <input type="number" class="form-control" id="updateCheckIntervalMinutes" asp-for="UpdateCheckIntervalMinutes" min="10" max="1440" step="10" />
                <small class="form-text text-muted">Hệ thống sẽ kiểm tra cập nhật mới sau mỗi khoảng thời gian này (tối thiểu 10 phút, tối đa 1440 phút).</small>
            </div>
            <div class="form-check mb-3">
                <input type="checkbox" class="form-check-input" id="autoUpdateProfiles" asp-for="AutoUpdateProfiles" />
                <label class="form-check-label" for="autoUpdateProfiles">Tự động cập nhật profile khi có cập nhật mới</label>
            </div>
            <button type="submit" class="btn btn-success">
                <i class="bi bi-save me-1"></i>
                Lưu cài đặt kiểm tra cập nhật
            </button>
        </form>
    </div>
</div>

<div class="card">
    <div class="card-header bg-success text-white">
        <h5 class="mb-0">Thông tin cập nhật game đã kiểm tra</h5>
    </div>
    <div class="card-body">
        <div class="table-container">
            <table class="table">
                <thead>
                    <tr>
                        <th style="display:none;">App ID</th>
                        <th>Tên game/App ID</th>
                        <th>Profile</th>
                        <th>Loại</th>
                        <th>Dung lượng</th>
                        <th>Trạng thái</th>
                        <th>Thao tác</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.UpdateInfos != null && Model.UpdateInfos.Any())
                    {
                        foreach (var vm in Model.UpdateInfos)
                        {
                            <tr class="@(vm.IsMainApp ? "" : "dependent-app-row")">
                                <td style="display:none;">@vm.ApiInfo.AppID</td>
                                <td>
                                    @vm.ApiInfo.Name<br />
                                    <small class="text-muted">@vm.ApiInfo.AppID</small>
                                </td>
                                <td>@vm.ProfileName</td>
                                <td>
                                    @if (vm.IsMainApp)
                                    {
                                        <span class="badge bg-primary">Chính</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-info">Phụ</span>
                                    }
                                </td>
                                <td>@vm.FormattedSize</td>
                                <td>
                                    @if (vm.NeedsUpdate)
                                    {
                                        <span class="status-badge running">
                                            <i class="bi bi-cloud-arrow-down"></i>
                                            Cần cập nhật
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="status-badge stopped">
                                            <i class="bi bi-check-circle"></i>
                                            Đã cập nhật
                                        </span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group">
                                        <button class="btn-icon update-btn" data-appid="@vm.ApiInfo.AppID" data-profileid="@vm.ProfileId" data-ismain="@vm.IsMainApp.ToString().ToLower()" title="Cập nhật">
                                            <i class="bi bi-arrow-repeat"></i>
                                        </button>
                                        @if (vm.IsMainApp)
                                        {
                                            <a href="?handler=DeleteProfile&id=@vm.ProfileId" class="btn-icon ms-2 btn-danger" 
                                               onclick="return confirm('Bạn có chắc chắn muốn xóa profile @vm.ProfileName?');"
                                               title="Xóa profile">
                                                <i class="bi bi-trash"></i>
                                            </a>
                                        }
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="7" class="text-center">Không có thông tin cập nhật nào. Hãy kiểm tra cập nhật lần đầu tiên.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<style>
    .dependent-app-row {
        background-color: #f8f9fa;
    }

    .dependent-app-row td {
        padding-top: 8px;
        padding-bottom: 8px;
        font-size: 0.95em;
    }

    .badge.bg-primary {
        background-color: #3498db !important;
    }

    .badge.bg-info {
        background-color: #17a2b8 !important;
        color: white !important;
    }
    
    .profile-selection-header {
        position: sticky;
        top: 0;
        z-index: 100;
    }
    
    .btn-danger {
        color: white !important;
        background-color: #dc3545 !important;
        border-color: #dc3545 !important;
    }
    
    .btn-danger:hover {
        background-color: #c82333 !important;
        border-color: #bd2130 !important;
    }
    
    .ms-2 {
        margin-left: 0.5rem !important;
    }
</style>

@section Scripts {
    <script>
        // Function để xác nhận xóa profile
        function confirmDelete(profileId, profileName, button) {
            Swal.fire({
                title: 'Xác nhận xóa',
                html: `Bạn có chắc chắn muốn xóa profile <strong>${profileName}</strong>?<br>Thao tác này không thể hoàn tác!`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Xóa',
                cancelButtonText: 'Hủy',
                confirmButtonColor: '#d33',
            }).then((result) => {
                if (result.isConfirmed) {
                    // Hiện loading
                    Swal.fire({
                        title: 'Đang xóa...',
                        html: 'Vui lòng đợi trong giây lát',
                        allowOutsideClick: false,
                        didOpen: () => {
                            Swal.showLoading();
                            
                            // Submit form
                            $(button).closest('form').submit();
                        }
                    });
                }
            });
        }
        
        $(document).ready(function() {
            // Kiểm tra xem có thông báo thành công hay không
            @if (!string.IsNullOrEmpty(Model.StatusMessage))
            {
                <text>
                Swal.fire({
                    icon: '@(Model.IsSuccess ? "success" : "error")',
                    title: '@(Model.IsSuccess ? "Thành công" : "Lỗi")',
                    text: "@Html.Raw(Model.StatusMessage.Replace("\n", " ").Replace("\"", "\\\""))"
                });
                </text>
            }
            
            // Lấy token CSRF
            var token = $('input[name="__RequestVerificationToken"]').val();
            
            // Kiểm tra cập nhật ngay
            $("#checkUpdatesBtn").click(function() {
                $(this).prop("disabled", true).html("<i class='bi bi-hourglass-split me-1'></i> Đang kiểm tra...");

                $.ajax({
                    url: "/UpdateManagement?handler=CheckUpdates",
                    method: "POST",
                    headers: {
                        "RequestVerificationToken": token
                    },
                    success: function(response) {
                        if (response.success) {
                            Swal.fire({
                                icon: 'success',
                                title: 'Kiểm tra thành công',
                                text: response.message
                            }).then(() => {
                                location.reload();
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Lỗi',
                                text: "Lỗi: " + (response.message || "Không thể kiểm tra cập nhật")
                            });
                        }
                    },
                    error: function(xhr, status, error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Lỗi',
                            text: "Lỗi khi kiểm tra cập nhật: " + error
                        });
                    },
                    complete: function() {
                        $("#checkUpdatesBtn").prop("disabled", false).html("<i class='bi bi-cloud-download me-1'></i> Kiểm tra cập nhật ngay");
                    }
                });
            });

            // Xóa cache cập nhật
            $("#clearCacheBtn").click(function() {
                Swal.fire({
                    title: 'Xác nhận',
                    text: "Bạn có chắc muốn xóa cache cập nhật không? Thao tác này sẽ buộc hệ thống kiểm tra lại thông tin từ Steam API ở lần kiểm tra tiếp theo.",
                    icon: 'question',
                    showCancelButton: true,
                    confirmButtonText: 'Đồng ý',
                    cancelButtonText: 'Hủy'
                }).then((result) => {
                    if (result.isConfirmed) {
                        $(this).prop("disabled", true).html("<i class='bi bi-hourglass-split me-1'></i> Đang xóa...");

                        $.ajax({
                            url: "/UpdateManagement?handler=ClearCache",
                            method: "POST",
                            headers: {
                                "RequestVerificationToken": token
                            },
                            success: function(response) {
                                if (response.success) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Thành công',
                                        text: response.message
                                    }).then(() => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Lỗi',
                                        text: "Lỗi: " + (response.message || "Không thể xóa cache cập nhật")
                                    });
                                }
                            },
                            error: function(xhr, status, error) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Lỗi',
                                    text: "Lỗi khi xóa cache cập nhật: " + error
                                });
                            },
                            complete: function() {
                                $("#clearCacheBtn").prop("disabled", false).html("<i class='bi bi-trash me-1'></i> Xóa cache cập nhật");
                            }
                        });
                    }
                });
            });

            // Xử lý nút cập nhật (update-btn)
            $(".update-btn").click(function() {
                var appId = $(this).data("appid");
                var profileId = $(this).data("profileid");
                var isMain = $(this).data("ismain");
                var button = $(this);

                button.prop("disabled", true);
                button.html("<i class='bi bi-hourglass-split'></i>");

                $.ajax({
                    url: "/UpdateManagement?handler=UpdateApp",
                    method: "POST",
                    data: {
                        appId: appId,
                        profileId: profileId,
                        isMainApp: isMain
                    },
                    headers: {
                        "RequestVerificationToken": token
                    },
                    success: function(response) {
                        if (response.success) {
                            alert(response.message);
                        } else {
                            alert("Lỗi: " + (response.message || "Không thể cập nhật game"));
                        }
                    },
                    error: function(xhr, status, error) {
                        alert("Lỗi khi gửi yêu cầu cập nhật: " + error);
                    },
                    complete: function() {
                        button.prop("disabled", false);
                        button.html("<i class='bi bi-arrow-repeat'></i>");
                    }
                });
            });
        });
    </script>
}
```