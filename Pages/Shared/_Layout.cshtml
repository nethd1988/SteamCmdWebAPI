<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - SteamAUTO</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <script src="~/js/site.js" asp-append-version="true"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.0/font/bootstrap-icons.css">
    <script>
        // Ghi đè các hàm thông báo mặc định để ngăn chặn thông báo không mong muốn
        window.originalAlert = window.alert;
        window.alert = function(message) {
            // Chặn tất cả thông báo có chứa từ khóa không mong muốn
            if (message && (
                message.includes("thành công") ||
                message.includes("localhost") ||
                message.includes("cho biết") ||
                message.includes("Lỗi") ||
                message.includes("error") ||
                message.includes("không thành công") ||
                message.includes("không thể")
            )) {
                console.log("Đã chặn thông báo: " + message);
                return;
            }
            window.originalAlert(message);
        };

        // Chặn confirm mặc định nếu cần
        window.originalConfirm = window.confirm;
        window.confirm = function(message) {
            if (message && (
                message.includes("localhost") ||
                message.includes("cho biết") ||
                message.includes("Lỗi") ||
                message.includes("error") ||
                message.includes("không thành công") ||
                message.includes("không thể")
            )) {
                console.log("Đã chặn xác nhận: " + message);
                return true;
            }
            return window.originalConfirm(message);
        };

        // Hàm tự động click nút OK trong các modal không mong muốn
        function autoClickOkButton(modal) {
            const okButton = modal.querySelector('[class*="ok" i], [class*="OK" i], button:contains("OK")');
            if (okButton) {
                okButton.click();
                console.log("Đã tự động click nút OK trong modal");
            }
        }
    </script>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container">
                <a class="navbar-brand" asp-area="" asp-page="/Index">SteamAUTO</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Index">Trang chủ</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Create">Thêm cấu hình</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Settings">Cài đặt chung</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/ServerSync">Đồng bộ server</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-page="/Logs">Xem Logs</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; @DateTime.Now.Year - SteamAUTO - <a asp-area="" asp-page="/Privacy">Quyền riêng tư</a>
        </div>
    </footer>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function() {
            // Tự động đóng modal mặc định
            setTimeout(function() {
                $('.modal').modal('hide');
                $('.modal-backdrop').remove();
                $('body').removeClass('modal-open');
                $('body').css('padding-right', '');
            }, 100);

            // Quan sát và chặn modal thông báo không mong muốn
            const observer = new MutationObserver(function(mutations) {
                mutations.forEach(function(mutation) {
                    if (mutation.addedNodes && mutation.addedNodes.length > 0) {
                        for (let i = 0; i < mutation.addedNodes.length; i++) {
                            const node = mutation.addedNodes[i];
                            if (node.nodeType === 1) {
                                // Kiểm tra nội dung của node
                                const nodeText = (node.innerText || '').toLowerCase();
                                if (nodeText.includes("localhost") ||
                                    nodeText.includes("cho biết") ||
                                    nodeText.includes("lỗi") ||
                                    nodeText.includes("error") ||
                                    nodeText.includes("không thành công") ||
                                    nodeText.includes("Có lỗi xảy ra:")) {
                                    // Xóa modal hoặc các phần tử liên quan
                                    if (node.classList.contains('modal') ||
                                        node.classList.contains('modal-dialog') ||
                                        node.classList.contains('modal-content')) {
                                        node.remove();
                                        console.log("Đã xóa modal chứa nội dung không mong muốn");
                                    } else {
                                        // Tìm modal cha và xóa
                                        const modalParent = node.closest('.modal');
                                        if (modalParent) {
                                            modalParent.remove();
                                            console.log("Đã xóa modal cha chứa nội dung không mong muốn");
                                        }
                                    }

                                    // Tự động click nút OK nếu tìm thấy
                                    autoClickOkButton(node);

                                    // Xóa backdrop và các lớp liên quan
                                    $('.modal-backdrop').remove();
                                    $('body').removeClass('modal-open');
                                    $('body').css('padding-right', '');
                                }
                            }
                        }
                    }
                });
            });

            observer.observe(document.body, {
                childList: true,
                subtree: true
            });

            // Chặn các alert từ server trả về trong các AJAX request
            $(document).ajaxComplete(function(event, xhr, settings) {
                const responseText = xhr.responseText || '';
                try {
                    const response = JSON.parse(responseText);
                    if (response && response.error && (
                        response.error.toLowerCase().includes("localhost") ||
                        response.error.toLowerCase().includes("cho biết") ||
                        response.error.toLowerCase().includes("lỗi") ||
                        response.error.toLowerCase().includes("error") ||
                        response.error.toLowerCase().includes("không thành công") ||
                        response.error.toLowerCase().includes("Có lỗi xảy ra:")
                    )) {
                        console.log("Đã chặn thông báo lỗi từ AJAX response: " + response.error);
                        return;
                    }
                } catch (e) {
                    // Không làm gì nếu response không phải JSON
                }
            });
        });
    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>