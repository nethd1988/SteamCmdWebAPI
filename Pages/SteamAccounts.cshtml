@page
@model SteamCmdWebAPI.Pages.SteamAccountsModel
@{
    ViewData["Title"] = "Quản lý tài khoản Steam";
    ViewData["ActivePage"] = "SteamAccounts";
}

<h1>Quản lý tài khoản Steam</h1>

@if (!string.IsNullOrEmpty(Model.StatusMessage))
{
    <div class="alert @(Model.IsSuccess ? "alert-success" : "alert-danger")">
        <i class="bi bi-@(Model.IsSuccess ? "check-circle" : "exclamation-triangle") me-2"></i>
        @Model.StatusMessage
    </div>
}

<div class="card mb-4">
    <div class="card-header bg-primary text-white">
        <h5 class="mb-0">Tài khoản Steam</h5>
    </div>
    <div class="card-body">
        <button class="btn btn-success mb-3" id="btnAddAccount">
            <i class="bi bi-plus-circle me-1"></i> Thêm tài khoản
        </button>

        <div class="table-responsive">
            <table class="table table-striped table-hover">
                <thead>
                    <tr>
                        <th style="width: 5%">ID</th>
                        <th style="width: 15%">TÊN PROFILE</th>
                        <th style="width: 8%">TỔNG</th>
                        <th style="width: 52%">APP IDS / TÊN GAME</th>
                        <th style="width: 10%">TỰ ĐỘNG</th>
                        <th style="width: 10%">THAO TÁC</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Accounts != null && Model.Accounts.Any())
                    {
                        foreach (var account in Model.Accounts)
                        {
                            <tr>
                                <td>@account.Id</td>
                                <td>@account.ProfileName</td>
                                <td class="text-center">
                                    @{
                                        var gameCount = !string.IsNullOrEmpty(account.AppIds) 
                                            ? account.AppIds.Split(',', StringSplitOptions.RemoveEmptyEntries).Length 
                                            : 0;
                                    }
                                    @gameCount
                                </td>
                                <td>
                                    <div class="game-info mb-1">@account.GameNames</div>
                                    <div class="app-ids">@account.AppIds</div>
                                </td>
                                <td class="text-center">
                                    <div class="form-check form-switch d-flex justify-content-center">
                                        <input class="form-check-input auto-scan-toggle" type="checkbox" 
                                               id="autoScanToggle_@account.Id" 
                                               data-account-id="@account.Id"
                                               @(account.AutoScanEnabled ? "checked" : "")>
                                    </div>
                                    @if (account.LastScanTime.HasValue)
                                    {
                                        <small class="d-block text-muted mt-1">@account.LastScanTime.Value.ToString("dd/MM HH:mm")</small>
                                    }
                                    @if (account.NextScanTime.HasValue && account.AutoScanEnabled)
                                    {
                                        <small class="d-block text-muted">@account.NextScanTime.Value.ToString("dd/MM HH:mm")</small>
                                    }
                                    <div class="dropdown mt-1">
                                        <button class="btn btn-sm btn-outline-secondary dropdown-toggle" 
                                                type="button"
                                                id="dropdownIntervalBtn_@account.Id" 
                                                data-bs-toggle="dropdown" 
                                                aria-expanded="false"
                                                data-account-id="@account.Id"
                                                data-profile-name="@account.ProfileName"
                                                data-interval="@account.ScanIntervalHours"
                                                data-auto-scan="@account.AutoScanEnabled.ToString().ToLower()"
                                                title="Chọn khoảng thời gian quét">
                                            <i class="bi bi-clock"></i> @account.ScanIntervalHours giờ
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownIntervalBtn_@account.Id">
                                            <li><h6 class="dropdown-header">Khoảng thời gian quét</h6></li>
                                            <li><a class="dropdown-item interval-option" href="#" data-account-id="@account.Id" data-interval="1">1 giờ</a></li>
                                            <li><a class="dropdown-item interval-option" href="#" data-account-id="@account.Id" data-interval="3">3 giờ</a></li>
                                            <li><a class="dropdown-item interval-option" href="#" data-account-id="@account.Id" data-interval="6">6 giờ</a></li>
                                            <li><a class="dropdown-item interval-option" href="#" data-account-id="@account.Id" data-interval="12">12 giờ</a></li>
                                            <li><a class="dropdown-item interval-option" href="#" data-account-id="@account.Id" data-interval="24">24 giờ</a></li>
                                        </ul>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex justify-content-around">
                                        <button class="btn-icon edit" onclick="return editAccount(@account.Id, event);" title="Sửa">
                                            <i class="bi bi-pencil"></i>
                                        </button>
                                        <button class="btn-icon scan-now" onclick="return scanNow(@account.Id, event);" title="Quét ngay">
                                            <i class="bi bi-search"></i>
                                        </button>
                                        <button class="btn-icon delete" onclick="return deleteAccount(@account.Id, '@account.ProfileName', event);" title="Xóa">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="6" class="text-center">Chưa có tài khoản nào</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Form thêm tài khoản -->
<div id="formAddAccount" style="display: none;">
    <div class="card mb-4">
        <div class="card-header bg-success text-white">
            <h5 class="mb-0">Thêm tài khoản Steam</h5>
        </div>
        <div class="card-body">
            <form method="post" id="addAccountForm">
                @Html.AntiForgeryToken()
                <div class="mb-3">
                    <label for="profileName" class="form-label">Tên Profile <span class="text-danger">*</span></label>
                    <input type="text" class="form-control" id="profileName" name="Account.ProfileName" required>
                    <div class="invalid-feedback">Vui lòng nhập tên profile</div>
                </div>
                <div class="mb-3">
                    <label for="username" class="form-label">Tên tài khoản <span class="text-danger">*</span></label>
                    <input type="text" class="form-control" id="username" name="Account.Username" required>
                    <div class="invalid-feedback">Vui lòng nhập tên tài khoản Steam</div>
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label">Mật khẩu <span class="text-danger">*</span></label>
                    <input type="password" class="form-control" id="password" name="Account.Password" required>
                    <div class="invalid-feedback">Vui lòng nhập mật khẩu</div>
                </div>
                <div class="mb-3">
                    <label for="appIds" class="form-label">App IDs & Game Names</label>
                    <div class="form-check form-switch mb-2">
                        <input class="form-check-input" type="checkbox" id="replaceExistingAppIds" checked>
                        <label class="form-check-label" for="replaceExistingAppIds">
                            Thay thế ID cũ (thay vì bổ sung thêm)
                        </label>
                    </div>
                    <div class="input-group">
                        <textarea class="form-control" id="appIds" name="Account.AppIds" rows="3" placeholder="Nhập AppIDs của game, cách nhau bởi dấu phẩy (ví dụ: 570,730,440)"></textarea>
                        <button class="btn btn-outline-primary" type="button" id="btnScanAppIds">Scan AppIDs</button>
                    </div>
                    <small class="form-text text-muted">Ví dụ nhập thủ công: 570,730,440</small>
                </div>
                <div class="mb-3">
                    <label for="gameNames" class="form-label">Tên game</label>
                    <textarea class="form-control" id="gameNames" name="Account.GameNames" rows="3" readonly></textarea>
                    <small class="form-text text-muted">Tên game sẽ tự động được lấy theo AppIDs</small>
                </div>
                <div class="d-flex justify-content-end gap-2">
                    <button type="button" class="btn btn-secondary" id="btnCancelAdd">Đóng</button>
                    <button type="button" class="btn btn-primary" id="btnSaveAccount">Lưu</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Form sửa tài khoản -->
<div id="formEditAccount" style="display: none;">
    <div class="card mb-4">
        <div class="card-header bg-info text-white">
            <h5 class="mb-0">Sửa tài khoản Steam</h5>
        </div>
        <div class="card-body">
            <form method="post" id="editAccountForm">
                @Html.AntiForgeryToken()
                <input type="hidden" id="editId" name="Account.Id">
                <div class="mb-3">
                    <label for="editProfileName" class="form-label">Tên Profile <span class="text-danger">*</span></label>
                    <input type="text" class="form-control" id="editProfileName" name="Account.ProfileName" required>
                    <div class="invalid-feedback">Vui lòng nhập tên profile</div>
                </div>
                <div class="mb-3">
                    <label for="editUsername" class="form-label">Tên tài khoản</label>
                    <input type="text" class="form-control" id="editUsername" name="Account.Username" placeholder="Để trống nếu không thay đổi">
                    <small class="form-text text-muted">Để trống nếu không thay đổi.</small>
                </div>
                <div class="mb-3">
                    <label for="editPassword" class="form-label">Mật khẩu</label>
                    <input type="password" class="form-control" id="editPassword" name="Account.Password" placeholder="Để trống nếu không thay đổi">
                    <small class="form-text text-muted">Để trống nếu không thay đổi. Khi quét game, hệ thống sẽ tự động sử dụng mật khẩu đã lưu.</small>
                </div>
                <div class="mb-3">
                    <label for="editAppIds" class="form-label">App IDs & Game Names</label>
                    <div class="form-check form-switch mb-2">
                        <input class="form-check-input" type="checkbox" id="editReplaceExistingAppIds" checked>
                        <label class="form-check-label" for="editReplaceExistingAppIds">
                            Thay thế ID cũ (thay vì bổ sung thêm)
                        </label>
                    </div>
                    <div class="input-group">
                        <textarea class="form-control" id="editAppIds" name="Account.AppIds" rows="3" placeholder="Nhập AppIDs của game, cách nhau bởi dấu phẩy (ví dụ: 570,730,440)"></textarea>
                        <button class="btn btn-outline-primary" type="button" id="btnEditScanAppIds">Scan AppIDs</button>
                    </div>
                    <small class="form-text text-muted">Ví dụ nhập thủ công: 570,730,440</small>
                </div>
                <div class="mb-3">
                    <label for="editGameNames" class="form-label">Tên game</label>
                    <textarea class="form-control" id="editGameNames" name="Account.GameNames" rows="3" readonly></textarea>
                    <small class="form-text text-muted">Tên game sẽ tự động được lấy theo AppIDs</small>
                </div>
                
                <!-- Đã xóa phần form hẹn giờ quét tự động -->
                <input type="hidden" id="editAutoScanEnabled" name="Account.AutoScanEnabled" value="false">
                <input type="hidden" id="editScanIntervalHours" name="Account.ScanIntervalHours" value="6">
                
                <div class="d-flex justify-content-end gap-2">
                    <button type="button" class="btn btn-secondary" id="btnCancelEdit">Đóng</button>
                    <button type="button" class="btn btn-primary" id="btnUpdateAccount">Cập nhật</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Hướng dẫn sử dụng tài khoản SteamAccounts -->
<div class="card mt-4">
    <div class="card-header bg-primary text-white">
        <h5 class="mb-0"><i class="bi bi-question-circle me-2"></i> Hướng dẫn sử dụng</h5>
    </div>
    <div class="card-body">
        <h6 class="fw-bold mb-3">Sử dụng tài khoản từ SteamAccounts</h6>
        <p class="mb-3">
            Tính năng <strong>SteamAccounts</strong> cho phép bạn lưu trữ các tài khoản Steam để sử dụng tự động 
            khi tạo và chạy các profile game. Điều này giúp tiết kiệm thời gian và dễ dàng quản lý nhiều tài khoản.
        </p>
        
        <div class="alert alert-success mb-3">
            <div class="d-flex">
                <div class="me-3">
                    <i class="bi bi-lightbulb-fill fs-3"></i>
                </div>
                <div>
                    <strong>Tính năng chính:</strong> Hệ thống sẽ tự động chọn tài khoản phù hợp dựa trên AppID của game khi 
                    bạn tạo profile mới. Điều này giúp bạn không cần phải nhớ tài khoản nào dùng cho game nào.
                </div>
            </div>
        </div>
        
        <h6 class="fw-bold mb-2">Các bước thiết lập và sử dụng:</h6>
        <ol class="mb-4">
            <li class="mb-2">
                <strong>Thêm tài khoản:</strong> Nhấn nút "Thêm tài khoản" và điền thông tin đăng nhập Steam.
            </li>
            <li class="mb-2">
                <strong>Quét game tự động:</strong> Nhấn nút "Tự động quét danh sách game từ tài khoản" và hệ thống sẽ
                tự động lấy danh sách game từ tài khoản Steam của bạn và điền vào trường App IDs.
            </li>
            <div class="alert alert-warning mx-4 my-2 py-2 px-3">
                <div class="d-flex">
                    <div class="me-2">
                        <i class="bi bi-exclamation-triangle-fill"></i>
                    </div>
                    <div>
                        <strong>Lưu ý khi quét game:</strong> Quá trình quét danh sách game từ Steam có thể bị timeout gây gián đoạn, đặc biệt 
                        khi tài khoản có nhiều game. Đây là hiện tượng bình thường do giới hạn của Steam API. Nếu gặp lỗi timeout, hãy thử quét lại. 
                        Hệ thống vẫn lưu lại các kết quả đã quét được trước đó.
                    </div>
                </div>
            </div>
            <li class="mb-2">
                <strong>Lưu cấu hình:</strong> Hệ thống sẽ tự động xác định tên game tương ứng với các AppID và lưu thông tin.
            </li>
            <li class="mb-2">
                <strong>Sử dụng tự động:</strong> Khi tạo profile game mới, chọn tùy chọn "Sử dụng tài khoản từ SteamAccounts" 
                để hệ thống tự động chọn tài khoản phù hợp.
            </li>
        </ol>
        
        <div class="alert alert-info mb-3">
            <div class="d-flex">
                <div class="me-3">
                    <i class="bi bi-lightbulb-fill fs-3"></i>
                </div>
                <div>
                    <strong>Mẹo:</strong> Khi thêm tài khoản mới, bạn cần nhập cả tên đăng nhập và mật khẩu Steam để quét game. 
                    Khi sửa tài khoản, bạn có thể quét game mà không cần nhập lại mật khẩu (hệ thống sẽ tự động sử dụng mật khẩu đã lưu).
                </div>
            </div>
        </div>
        
        <div class="alert alert-warning mb-3">
            <div class="d-flex">
                <div class="me-3">
                    <i class="bi bi-exclamation-triangle-fill fs-3"></i>
                </div>
                <div>
                    <strong>Hướng dẫn quét game:</strong>
                    <ol>
                        <li>Khi quét game từ tài khoản Steam, quá trình có thể mất từ 30 giây đến vài phút tùy thuộc vào số lượng game.</li>
                        <li>Nếu tài khoản có nhiều game (trên 100 game), quá trình quét có thể bị timeout. Đây là hiện tượng bình thường.</li>
                        <li>Nếu quét bị gián đoạn, hãy thử quét lại. Hệ thống đã được tối ưu để loại bỏ các ID không phải là game thật.</li>
                        <li>Nếu tiếp tục gặp lỗi timeout, bạn có thể nhập thủ công các AppID quan trọng rồi nhấn nút "Scan AppIDs".</li>
                        <li>Nếu quét game chưa đủ số game đã có, hãy tiếp lại thêm 1 lần quét nữa ^^ ".</li>
                    </ol>
                </div>
            </div>
        </div>
        
        <h6 class="fw-bold mb-2">Bảo mật:</h6>
        <p>
            Tất cả mật khẩu được mã hóa trước khi lưu trữ để bảo vệ thông tin tài khoản của bạn. 
            Tên tài khoản được hiển thị dưới dạng đã che giấu để tăng cường bảo mật.
        </p>
    </div>
</div>

@section Styles {
    <style>
        .scan-result .badge {
            font-size: 0.85em;
        }
        
        .scan-overlay {
            z-index: 1000;
            border-radius: 0.25rem;
        }
        
        .card-body {
            position: relative;
        }
        
        /* Hiệu ứng hover cho badge */
        .badge.bg-success:hover {
            background-color: #218838 !important;
            cursor: default;
        }
        
        /* Tùy chỉnh hiển thị tên game để tự động xuống dòng */
        td {
            vertical-align: middle;
            word-wrap: break-word;
            overflow-wrap: break-word;
        }
        
        /* Tùy chỉnh cho cột AppIds và GameNames */
        .game-info {
            max-width: 100%;
            word-wrap: break-word;
            overflow-wrap: break-word;
            white-space: normal;
            line-height: 1.4;
        }
        
        /* Tùy chỉnh cho danh sách AppIds */
        .app-ids {
            color: #6c757d;
            font-size: 0.85em;
            word-break: break-all;
            line-height: 1.3;
            display: block;
        }
        
        /* Tùy chỉnh nút thao tác */
        .btn-icon {
            background: none;
            border: none;
            padding: 0.4rem;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .btn-icon.edit {
            color: #17a2b8;
        }
        
        .btn-icon.scan-now {
            color: #28a745;
        }
        
        .btn-icon.delete {
            color: #dc3545;
        }
        
        .btn-icon:hover {
            transform: scale(1.2);
        }
    </style>
}

@section Scripts {
    <script>
        // Cấu hình toastr để thông báo hiển thị lâu hơn
        toastr.options = {
            "closeButton": true,
            "debug": false,
            "newestOnTop": false,
            "progressBar": true,
            "positionClass": "toast-top-right",
            "preventDuplicates": false,
            "onclick": null,
            "showDuration": "300",
            "hideDuration": "1000",
            "timeOut": "30000",  // 30 giây thay vì mặc định 5 giây
            "extendedTimeOut": "10000",  // 10 giây khi hover
            "showEasing": "swing",
            "hideEasing": "linear",
            "showMethod": "fadeIn",
            "hideMethod": "fadeOut"
        };
        
        // Khởi tạo khi trang đã tải xong
        $(document).ready(function() {
            // Khôi phục trạng thái của các toggle từ localStorage
            const replaceIdsToggleSetting = localStorage.getItem('replaceExistingAppIds');
            if (replaceIdsToggleSetting !== null) {
                const isChecked = replaceIdsToggleSetting === 'true';
                $("#replaceExistingAppIds").prop('checked', isChecked);
                $("#editReplaceExistingAppIds").prop('checked', isChecked);
            }
            
            // Lưu trạng thái toggle khi thay đổi
            $("#replaceExistingAppIds, #editReplaceExistingAppIds").on('change', function() {
                const isChecked = $(this).prop('checked');
                localStorage.setItem('replaceExistingAppIds', isChecked);
                
                // Đồng bộ hóa trạng thái giữa cả hai toggle (add và edit)
                $("#replaceExistingAppIds, #editReplaceExistingAppIds").prop('checked', isChecked);
            });
            
            // Xử lý sự kiện chọn khoảng thời gian quét từ dropdown
            $(document).on('click', '.interval-option', function(event) {
                event.preventDefault();
                
                const accountId = $(this).data('account-id');
                const interval = $(this).data('interval');
                const dropdownButton = $(`#dropdownIntervalBtn_${accountId}`);
                const isEnabled = $(`#autoScanToggle_${accountId}`).prop('checked');

                // Hiển thị trạng thái đang xử lý trên nút
                const originalText = dropdownButton.html();
                dropdownButton.html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang lưu...');

                // Tạo dữ liệu để gửi
                const data = {
                    Account: {
                        Id: parseInt(accountId),
                        AutoScanEnabled: isEnabled,
                        ScanIntervalHours: interval
                    }
                };
                
                console.log("Đang lưu cài đặt khoảng thời gian quét:", data);
                
                // Gửi cài đặt lên server
                $.ajax({
                    url: '?handler=UpdateScanSettings',
                    type: 'POST',
                    contentType: 'application/json',
                    data: JSON.stringify(data),
                    headers: {
                        'RequestVerificationToken': $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        if (response && response.success) {
                            // Cập nhật giao diện
                            dropdownButton.html(`<i class="bi bi-clock"></i> ${interval} giờ`);
                            dropdownButton.data('interval', interval);
                            
                            // Hiển thị thông báo
                            toastr.success(`Đã thay đổi khoảng thời gian quét thành ${interval} giờ`, 'Thành công');
                            
                            // Cập nhật hiển thị thời gian quét tiếp theo
                            if (isEnabled && response.nextScanTime) {
                                const toggleElem = $(`#autoScanToggle_${accountId}`);
                                const container = toggleElem.closest('td').find('small:last');
                                
                                if (container.length === 0) {
                                    toggleElem.closest('td').find('.form-check').after(
                                        `<small class="d-block text-muted mt-1">@DateTime.Now.ToString("dd/MM HH:mm")</small>
                                         <small class="d-block text-muted">${response.nextScanTime}</small>`
                                    );
                        } else {
                                    container.text(response.nextScanTime);
                                }
                            }
                        } else {
                            // Khôi phục nút
                            dropdownButton.html(originalText);
                            toastr.error(response?.message || 'Có lỗi xảy ra khi lưu cài đặt quét tự động', 'Lỗi');
                        }
                    },
                    error: function(xhr, status, error) {
                        // Khôi phục nút
                        dropdownButton.html(originalText);
                        
                        console.error('AJAX Error:', status, error);
                        let errorMessage = 'Có lỗi xảy ra khi lưu cài đặt';
                        
                        if (xhr && xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }
                        
                        toastr.error(errorMessage, 'Lỗi');
                    }
                });
            });
        });
        
        // Hàng đợi quét tài khoản - sẽ quét tuần tự
        const scanQueue = {
            queue: [],
            isProcessing: false,
            
            // Thêm tài khoản vào hàng đợi
            add: function(accountId) {
                if (this.queue.includes(accountId)) {
                    toastr.info(`Tài khoản ID ${accountId} đã nằm trong hàng đợi quét.`, "Thông báo");
                    return false;
                }
                
                this.queue.push(accountId);
                toastr.info(`Đã thêm tài khoản ID ${accountId} vào hàng đợi quét.`, "Thông báo");
                
                if (!this.isProcessing) {
                    this.processNext();
                }
                
                return true;
            },
            
            // Xử lý tài khoản tiếp theo trong hàng đợi
            processNext: function() {
                if (this.queue.length === 0) {
                    this.isProcessing = false;
                    toastr.success("Hoàn thành quét tất cả tài khoản trong hàng đợi.", "Thành công");
                    return;
                }
                
                this.isProcessing = true;
                const accountId = this.queue.shift();
                            
                // Hiển thị trạng thái đang quét
                toastr.info(`Đang quét tài khoản ID ${accountId}. Còn ${this.queue.length} tài khoản trong hàng đợi.`, "Đang quét", {
                    "timeOut": "0",
                    "extendedTimeOut": "0",
                    "progressBar": false,
                    "positionClass": "toast-top-center"
                });
                
                // Lấy giá trị của checkbox Thay thế ID cũ từ localStorage hoặc UI
                let replaceExistingIds;
                
                // Nếu đang trong form edit và form edit đang hiển thị, sử dụng toggle trong form edit
                if ($("#formEditAccount").is(":visible")) {
                    replaceExistingIds = $("#editReplaceExistingAppIds").is(":checked");
                } else {
                    // Nếu không, sử dụng toggle từ form thêm mới hoặc localStorage
                    replaceExistingIds = $("#replaceExistingAppIds").is(":checked");
                }
                
                // Thực hiện quét
                $.ajax({
                    url: "?handler=ScanNow",
                    type: "POST",
                    data: { 
                        accountId: accountId,
                        replaceExistingIds: replaceExistingIds
                    },
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: (response) => {
                        toastr.clear();
                        
                        if (response && response.success) {
                            toastr.success(`Quét thành công tài khoản ID ${accountId}!`, "Thành công", {
                                "timeOut": "5000",
                                "positionClass": "toast-top-center"
            });

                            // Nếu có kết quả mới, hiển thị
                            if (response.newGamesCount > 0) {
                                toastr.info(`Đã tìm thấy ${response.newGamesCount} game mới!`, "Kết quả quét", {
                        "timeOut": "10000",
                        "positionClass": "toast-top-center"
                                });
                            }
                        } else {
                            toastr.error(response?.message || `Có lỗi xảy ra khi quét tài khoản ID ${accountId}`, "Lỗi", {
                                "timeOut": "10000",
                                "positionClass": "toast-top-center"
                            });
                        }
                        
                        // Xử lý tài khoản tiếp theo sau một khoảng thời gian
                        setTimeout(() => this.processNext(), 1000);
                    },
                    error: (xhr, status, error) => {
                        toastr.clear();
                        console.error("Lỗi AJAX:", status, error);
                        
                        let errorMessage = `Có lỗi xảy ra khi quét tài khoản ID ${accountId}`;
                        try {
                            if (xhr && xhr.responseJSON && xhr.responseJSON.message) {
                                errorMessage = xhr.responseJSON.message;
                }
                        } catch (e) {
                            console.error("Lỗi khi xử lý phản hồi lỗi:", e);
                        }
                        
                        toastr.error(errorMessage, "Lỗi", {
                        "timeOut": "10000",
                        "positionClass": "toast-top-center"
                        });
                        
                        // Xử lý tài khoản tiếp theo dù có lỗi
                        setTimeout(() => this.processNext(), 1000);
                    }
                });
            }
        };
        
        // Quét tài khoản ngay lập tức - sử dụng hàng đợi
        function scanNow(accountId, event) {
            // Ngăn chặn hành vi mặc định
            if (event) {
                event.preventDefault();
            }
            
            if (!confirm("Bạn có muốn quét ngay tài khoản này không?")) {
                return false;
            }
            
            // Thêm vào hàng đợi và xử lý
            scanQueue.add(accountId);
            return false;
        }
        
        // Hàm quét tất cả tài khoản
        function scanAllAccounts() {
            if (!confirm("Bạn có muốn quét tất cả tài khoản không?")) {
                    return;
                }
                
            // Lấy danh sách tất cả các ID tài khoản
            const accountIds = [];
            $(".auto-scan-toggle").each(function() {
                accountIds.push($(this).data("account-id"));
            });
            
            if (accountIds.length === 0) {
                toastr.warning("Không có tài khoản nào để quét.", "Cảnh báo");
                    return;
                }
                
            toastr.info(`Đang thêm ${accountIds.length} tài khoản vào hàng đợi quét...`, "Thông báo");
            
            // Thêm từng tài khoản vào hàng đợi
            accountIds.forEach(id => scanQueue.add(id));
                }

        // Xóa tài khoản
        function deleteAccount(id, profileName, event) {
            // Ngăn chặn hành vi mặc định
            if (event) {
                event.preventDefault();
            }
            
            if (!confirm(`Bạn có chắc muốn xóa tài khoản "${profileName}" không?`)) {
                return false;
            }
            
                $.ajax({
                url: "?handler=DeleteAccount",
                    type: "POST",
                data: { id: id },
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                success: function(response) {
                    if (response && response.success) {
                        toastr.success("Đã xóa tài khoản thành công!", "Thành công");
                        // Tải lại trang sau 1 giây
                        setTimeout(function() {
                            window.location.reload();
                        }, 1000);
                    } else {
                        toastr.error(response?.message || "Có lỗi xảy ra khi xóa tài khoản", "Lỗi");
                    }
                },
                error: function(xhr, status, error) {
                    console.error("Lỗi AJAX:", status, error);
                    toastr.error("Không thể xóa tài khoản. Vui lòng thử lại sau.", "Lỗi");
                }
            });
            
            return false;
        }
        
        $(document).ready(function () {
            // Biến lưu vị trí scroll trước khi hiển thị form
            let lastScrollPosition = 0;
                            
            // Xử lý bật/tắt quét tự động
            $(document).on("change", ".auto-scan-toggle", function() {
                const accountId = $(this).data("account-id");
                const isEnabled = $(this).prop("checked");
                const toggleElem = $(this);
                
                // Ghi log
                console.log(`Toggling auto scan for account ${accountId}: ${isEnabled}`);
                
                // Tạo đối tượng dữ liệu để gửi
                const data = { 
                    accountId: accountId,
                    enabled: isEnabled
                };
                
                // Gửi yêu cầu lên server
                $.ajax({
                    url: "?handler=ToggleAutoScan",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify(data),
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        console.log("Server response:", response);
                        
                        if (response && response.success) {
                            toastr.success(
                                `Đã ${isEnabled ? 'bật' : 'tắt'} quét tự động cho tài khoản này`,
                                "Thành công",
                                {
                                    "timeOut": "3000",
                                    "positionClass": "toast-top-right"
                                }
                            );
                            
                            if (isEnabled && response.nextScanTime) {
                                // Hiển thị thời gian quét tiếp theo
                                toastr.info(
                                    `Lần quét tiếp theo: ${response.nextScanTime}`,
                                    "Thông tin",
                                    {
                                        "timeOut": "5000"
                                    }
                                );
                            
                                // Cập nhật UI để hiển thị thời gian quét tiếp theo
                                const container = toggleElem.closest("td").find("small:last");
                                if (container.length === 0) {
                                    // Nếu chưa có small tag, thêm mới
                                    toggleElem.closest("td").find(".form-check").after(
                                        `<small class="d-block text-muted mt-1">@DateTime.Now.ToString("dd/MM HH:mm")</small>
                                         <small class="d-block text-muted">${response.nextScanTime}</small>`
                                    );
                            } else {
                                    container.text(response.nextScanTime);
                                }
                                
                                // Cập nhật data attribute cho nút cài đặt
                                toggleElem.closest("td").find(".btn-set-interval").data("auto-scan", "true");
                            } else {
                                // Nếu tắt, xóa thông tin thời gian quét tiếp theo
                                toggleElem.closest("td").find("small:contains('Quét tiếp theo')").remove();
                                
                                // Cập nhật data attribute cho nút cài đặt
                                toggleElem.closest("td").find(".btn-set-interval").data("auto-scan", "false");
                            }
                        } else {
                            // Khôi phục UI nếu lỗi
                            toggleElem.prop("checked", !isEnabled);
                            
                            toastr.error(response?.message || "Có lỗi xảy ra khi cập nhật trạng thái quét tự động", "Lỗi", {
                                "timeOut": "5000"
                            });
                        }
                    },
                    error: function(xhr, status, error) {
                        // Khôi phục UI nếu lỗi
                        toggleElem.prop("checked", !isEnabled);
                        
                        console.error("AJAX Error:", status, error);
                        let errorMessage = "Có lỗi xảy ra khi gửi yêu cầu";
                        
                        if (xhr && xhr.responseJSON && xhr.responseJSON.message) {
                            errorMessage = xhr.responseJSON.message;
                        }
                        
                        toastr.error(errorMessage, "Lỗi", {
                            "timeOut": "5000"
                            });
                    }
                });
            });
            
            // Hiển thị form thêm tài khoản
            $("#btnAddAccount").click(function (event) {
                // Ngăn chặn hành vi mặc định của sự kiện click
                event.preventDefault();
                
                // Lưu vị trí scroll hiện tại
                lastScrollPosition = $(window).scrollTop();
                
                // Áp dụng trạng thái toggle từ localStorage
                const replaceIdsToggleSetting = localStorage.getItem('replaceExistingAppIds');
                if (replaceIdsToggleSetting !== null) {
                    $("#replaceExistingAppIds").prop('checked', replaceIdsToggleSetting === 'true');
                }
                
                $("#formAddAccount").slideDown();
                
                // Scroll đến form
                $('html, body').animate({
                    scrollTop: $("#formAddAccount").offset().top - 100
                }, 500);
            });

            // Ẩn form thêm tài khoản
            $("#btnCancelAdd").click(function (event) {
                // Ngăn chặn hành vi mặc định của sự kiện click
                event.preventDefault();
                
                $("#formAddAccount").slideUp(400, function() {
                    // Xóa các trường đã nhập
                    $("#addAccountForm")[0].reset();
                            
                    // Xóa trạng thái validation
                    $("#addAccountForm").find(".is-invalid").removeClass("is-invalid");
                    
                    // Trở về vị trí scroll trước đó
                    $('html, body').animate({
                        scrollTop: lastScrollPosition
                    }, 300);
                            });
            });
                            
            // Ẩn form sửa tài khoản
            $("#btnCancelEdit").click(function (event) {
                // Ngăn chặn hành vi mặc định của sự kiện click
                event.preventDefault();
                
                $("#formEditAccount").slideUp(400, function() {
                    $("#editAccountForm")[0].reset();
                    $("#editAccountForm").find(".is-invalid").removeClass("is-invalid");
                });
        });

        // Hàm sửa tài khoản
            window.editAccount = function(id, event) {
                // Ngăn chặn hành vi mặc định của trình duyệt
                if (event) {
                    event.preventDefault();
                }
                
            $.ajax({
                url: `?handler=GetAccount&id=${id}`,
                type: "GET",
                success: function (response) {
                    if (response.success) {
                        const account = response.account;
                        $("#editId").val(account.id);
                        $("#editProfileName").val(account.profileName);
                        $("#editUsername").val(''); // Để trống username
                        $("#editPassword").val(''); // Để trống password
                        $("#editAppIds").val(account.appIds);
                        $("#editGameNames").val(account.gameNames);
                            
                        // Áp dụng trạng thái toggle từ localStorage
                        const replaceIdsToggleSetting = localStorage.getItem('replaceExistingAppIds');
                        if (replaceIdsToggleSetting !== null) {
                            $("#editReplaceExistingAppIds").prop('checked', replaceIdsToggleSetting === 'true');
                        }
                            
                        // Lấy trạng thái hiện tại từ bảng thay vì từ dữ liệu API
                        const currentAutoScanEnabled = $(`#autoScanToggle_${account.id}`).prop("checked");
                        console.log(`Trạng thái hiện tại của AutoScanEnabled cho tài khoản ${account.id}: ${currentAutoScanEnabled}`);
                            
                        // Sử dụng trạng thái từ UI để đảm bảo tính nhất quán
                        $("#editAutoScanEnabled").val(currentAutoScanEnabled ? "true" : "false");
                            
                        // Lấy khoảng thời gian từ data-interval của nút cài đặt
                        const currentInterval = $(`.btn-set-interval[data-account-id="${account.id}"]`).data("interval") || 6;
                        $("#editScanIntervalHours").val(currentInterval);
                            
                        console.log(`Đang chỉnh sửa tài khoản ${account.id} - AutoScanEnabled: ${currentAutoScanEnabled}, Interval: ${currentInterval}`);
                        
                        // Xóa kết quả scan cũ nếu có
                        $("#editAppIds-result, #editAppIds-account-result").remove();
                        
                        $("#formEditAccount").slideDown();
                        // Scroll đến form
                        $("html, body").animate({
                            scrollTop: $("#formEditAccount").offset().top - 100
                        }, 500);
                    } else {
                        toastr.error(response.message || "Không thể tải thông tin tài khoản", "Lỗi", {
                            "timeOut": "30000"
                        });
                    }
                },
                error: function () {
                    toastr.error("Có lỗi xảy ra khi gửi yêu cầu", "Lỗi", {
                        "timeOut": "30000"
                    });
                }
            });
                
                // Trả về false để ngăn chặn hành vi mặc định
                return false;
            }
            
            // Lưu tài khoản mới
            $("#btnSaveAccount").click(function(event) {
                // Ngăn chặn hành vi mặc định của sự kiện click
                event.preventDefault();
                
                // Kiểm tra dữ liệu
                var isValid = true;
                if (!$("#profileName").val().trim()) {
                    $("#profileName").addClass("is-invalid");
                    isValid = false;
                } else {
                    $("#profileName").removeClass("is-invalid");
                }
                
                if (!$("#username").val().trim()) {
                    $("#username").addClass("is-invalid");
                    isValid = false;
                } else {
                    $("#username").removeClass("is-invalid");
                }
                
                if (!$("#password").val().trim()) {
                    $("#password").addClass("is-invalid");
                    isValid = false;
                } else {
                    $("#password").removeClass("is-invalid");
                }
                
                if (!isValid) {
                    toastr.error("Vui lòng điền đầy đủ thông tin bắt buộc", "Lỗi");
                    return;
                }
                
                // Nếu có nhập AppIds nhưng chưa có GameNames, tự động lấy
                if ($("#appIds").val().trim() && !$("#gameNames").val().trim()) {
                    toastr.info("Đang lấy thông tin tên game trước khi lưu...", "Vui lòng đợi");
                    getGameNames($("#appIds").val().trim(), "#gameNames");
                    
                    // Đợi 2 giây để API lấy tên game hoàn thành
                    setTimeout(function() {
                        if (!$("#gameNames").val().trim()) {
                            if (!confirm("Chưa có thông tin tên game. Bạn có muốn lưu mà không có tên game không?")) {
                                $("#btnSaveAccount").prop("disabled", false).html('Lưu');
                                return;
                            }
                        }
                        // Tiếp tục lưu tài khoản
                        saveAccount();
                    }, 2000);
                } else {
                    // Tiếp tục lưu tài khoản ngay
                    saveAccount();
                }
                
                function saveAccount() {
                    // Hiển thị loading
                    $("#btnSaveAccount").prop("disabled", true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang lưu...');
                    
                    // Gửi dữ liệu
                    $.ajax({
                        url: "?handler=AddAccount",
                        type: "POST",
                        data: $("#addAccountForm").serialize(),
                        headers: {
                            "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            $("#btnSaveAccount").prop("disabled", false).html('Lưu');
                            
                            if (response.success) {
                                toastr.success("Đã thêm tài khoản thành công!", "Thành công");
                                
                                // Ẩn form và tải lại trang
                                $("#formAddAccount").slideUp();
                                setTimeout(function() {
                                    window.location.reload();
                                }, 1000);
                            } else {
                                toastr.error(response.message || "Có lỗi xảy ra khi thêm tài khoản", "Lỗi");
                            }
                        },
                        error: function() {
                            $("#btnSaveAccount").prop("disabled", false).html('Lưu');
                            toastr.error("Không thể thêm tài khoản. Vui lòng thử lại sau.", "Lỗi");
                        }
                    });
                }
            });
            
            // Cập nhật tài khoản
            $("#btnUpdateAccount").click(function(event) {
                // Ngăn chặn hành vi mặc định của sự kiện click
                event.preventDefault();
                
                // Kiểm tra dữ liệu
                var isValid = true;
                if (!$("#editProfileName").val().trim()) {
                    $("#editProfileName").addClass("is-invalid");
                    isValid = false;
                } else {
                    $("#editProfileName").removeClass("is-invalid");
                }
                
                if (!isValid) {
                    toastr.error("Vui lòng điền tên profile", "Lỗi");
                    return;
                }
                
                // Nếu có nhập AppIds nhưng chưa có GameNames, tự động lấy
                if ($("#editAppIds").val().trim() && !$("#editGameNames").val().trim()) {
                    toastr.info("Đang lấy thông tin tên game trước khi cập nhật...", "Vui lòng đợi");
                    getGameNames($("#editAppIds").val().trim(), "#editGameNames");
                    
                    // Đợi 3 giây để API lấy tên game hoàn thành
                    setTimeout(function() {
                        if (!$("#editGameNames").val().trim()) {
                            if (!confirm("Chưa có thông tin tên game. Bạn có muốn cập nhật mà không có tên game không?")) {
                                $("#btnUpdateAccount").prop("disabled", false).html('Cập nhật');
                                return;
                            }
                        }
                        // Tiếp tục cập nhật tài khoản
                        updateAccount();
                    }, 3000);
                } else {
                    // Tiếp tục cập nhật tài khoản ngay
                    updateAccount();
                }
                
                function updateAccount() {
                    // Hiển thị loading
                    $("#btnUpdateAccount").prop("disabled", true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang cập nhật...');
                    
                    // Lấy dữ liệu GameNames từ textarea
                    const gameNames = $("#editGameNames").val();
                    
                    // Tạo đối tượng dữ liệu để gửi đi
                    const autoScanEnabled = $("#editAutoScanEnabled").val() === "true";
                    const scanIntervalHours = parseInt($("#editScanIntervalHours").val()) || 6;
                    
                    var accountData = {
                        Account: {
                            Id: parseInt($("#editId").val()),
                            ProfileName: $("#editProfileName").val(),
                            Username: $("#editUsername").val(),
                            Password: $("#editPassword").val(),
                            AppIds: $("#editAppIds").val(),
                            GameNames: gameNames,
                            AutoScanEnabled: autoScanEnabled,
                            ScanIntervalHours: scanIntervalHours
                        }
                    };
                    
                    // Ghi log dữ liệu để debug
                    console.log("Sending account data:", JSON.stringify(accountData));
                    console.log("Game names being sent:", gameNames);
                    
                    // Gửi dữ liệu với Content-Type application/json
                    $.ajax({
                        url: "?handler=UpdateAccount",
                        type: "POST",
                        contentType: "application/json",
                        data: JSON.stringify(accountData),
                        headers: {
                            "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                        },
                        success: function(response) {
                            $("#btnUpdateAccount").prop("disabled", false).html('Cập nhật');
                            
                            if (response.success) {
                                toastr.success("Đã cập nhật tài khoản thành công!", "Thành công");
                                
                                // Ẩn form và tải lại trang
                                $("#formEditAccount").slideUp();
                                setTimeout(function() {
                                    window.location.reload();
                                }, 1000);
                            } else {
                                toastr.error(response.message || "Có lỗi xảy ra khi cập nhật tài khoản", "Lỗi");
                            }
                        },
                        error: function(xhr, status, error) {
                            $("#btnUpdateAccount").prop("disabled", false).html('Cập nhật');
                            console.error("AJAX Error:", status, error);
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                toastr.error(xhr.responseJSON.message, "Lỗi");
                            } else {
                                toastr.error("Không thể cập nhật tài khoản. Vui lòng thử lại sau.", "Lỗi");
                            }
                        }
                    });
                }
            });
            
            // Thêm nút quét tất cả tài khoản
            const scanAllButton = $('<button class="btn btn-warning me-2 mb-3"><i class="bi bi-search"></i> Quét tất cả tài khoản</button>');
            $("#btnAddAccount").before(scanAllButton);
            
            // Gắn sự kiện cho nút quét tất cả
            scanAllButton.click(function(event) {
                // Ngăn chặn hành vi mặc định của sự kiện click
                event.preventDefault();
                
                scanAllAccounts();
            });
            
            // Hàm lấy tên game dựa trên App IDs nhập vào
            function getGameNames(appIds, targetField) {
                if (!appIds || appIds.trim() === "") {
                    $(targetField).val("");
                    return;
                }
                
                // Hiển thị trạng thái loading
                const originalText = $(targetField).val();
                $(targetField).val("Đang lấy thông tin game...");
                
                // Gọi API và hiển thị thông báo quá trình đang thực hiện
                toastr.info("Đang tìm thông tin tên game, vui lòng đợi...", "Đang xử lý", {
                    timeOut: 0,
                    extendedTimeOut: 0,
                    progressBar: true,
                    closeButton: true
                });
                
                $.ajax({
                    url: "?handler=GetGameNames",
                    type: "POST",
                    contentType: "application/json",
                    data: JSON.stringify({ appIds: appIds }),
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        // Xóa thông báo loading
                        toastr.clear();
                        
                        if (response.success) {
                            $(targetField).val(response.gameNames);
                            toastr.success("Đã lấy thông tin tên game thành công", "Thành công", {
                                timeOut: 3000
                            });
                            
                            // Ghi log thông tin game đã lấy được
                            console.log("Tên game đã lấy được:", response.gameNames);
                            console.log("Chi tiết:", response.details);
                        } else {
                            $(targetField).val(originalText || "Không thể lấy tên game");
                            toastr.warning(response.message || "Không thể lấy tên game", "Cảnh báo");
                        }
                    },
                    error: function(xhr, status, error) {
                        // Xóa thông báo loading
                        toastr.clear();
                        
                        $(targetField).val(originalText || "");
                        toastr.warning("Có lỗi xảy ra khi lấy tên game: " + error, "Cảnh báo");
                        console.error("Lỗi khi lấy tên game:", xhr, status, error);
                    }
                });
            }
            
            // Xử lý khi nhập App IDs trong form thêm mới
            var appIdsTimer;
            $("#appIds").on("input", function() {
                clearTimeout(appIdsTimer);
                appIdsTimer = setTimeout(function() {
                    getGameNames($("#appIds").val(), "#gameNames");
                }, 1500); // Đợi 1.5 giây sau khi nhập xong
            });
            
            // Xử lý khi focus ra khỏi trường AppIds trong form thêm mới
            $("#appIds").on("blur", function() {
                const appIds = $(this).val().trim();
                if (appIds && !$("#gameNames").val().trim()) {
                    getGameNames(appIds, "#gameNames");
                }
            });
            
            // Xử lý khi nhập App IDs trong form chỉnh sửa
            var editAppIdsTimer;
            $("#editAppIds").on("input", function() {
                clearTimeout(editAppIdsTimer);
                editAppIdsTimer = setTimeout(function() {
                    getGameNames($("#editAppIds").val(), "#editGameNames");
                }, 1500); // Đợi 1.5 giây sau khi nhập xong
            });
            
            // Xử lý khi focus ra khỏi trường AppIds trong form sửa
            $("#editAppIds").on("blur", function() {
                const appIds = $(this).val().trim();
                if (appIds && !$("#editGameNames").val().trim()) {
                    getGameNames(appIds, "#editGameNames");
                }
            });
            
            // Xử lý khi dán App IDs
            $("#appIds, #editAppIds").on("paste", function() {
                const element = this;
                setTimeout(function() {
                    if ($(element).attr("id") === "appIds") {
                        getGameNames($(element).val(), "#gameNames");
                    } else {
                        getGameNames($(element).val(), "#editGameNames");
                    }
                }, 100);
            });
            
            // Xử lý nút Scan AppIDs trong form thêm tài khoản
            $("#btnScanAppIds").click(function(event) {
                event.preventDefault();
                const appIds = $("#appIds").val().trim();
                if (!appIds) {
                    toastr.warning("Vui lòng nhập AppIDs trước khi quét", "Cảnh báo");
                    return;
                }
                
                // Hiển thị trạng thái đang xử lý
                const originalText = $(this).html();
                $(this).prop("disabled", true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang quét...');
                
                // Gọi API để quét AppIDs
                $.ajax({
                    url: "?handler=ScanAppIds",
                    type: "POST",
                    data: { appIds: appIds },
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        $("#btnScanAppIds").prop("disabled", false).html(originalText);
                        
                        if (response.success) {
                            // Cập nhật trường GameNames
                            $("#gameNames").val(response.gameNames);
                            toastr.success(`Đã quét thành công ${response.results.length} game!`, "Thành công");
                        } else {
                            toastr.error(response.message || "Không thể quét AppIDs", "Lỗi");
                        }
                    },
                    error: function() {
                        $("#btnScanAppIds").prop("disabled", false).html(originalText);
                        toastr.error("Có lỗi xảy ra khi quét AppIDs", "Lỗi");
                    }
                });
            });
            
            // Xử lý nút Scan AppIDs trong form sửa tài khoản
            $("#btnEditScanAppIds").click(function(event) {
                event.preventDefault();
                const appIds = $("#editAppIds").val().trim();
                if (!appIds) {
                    toastr.warning("Vui lòng nhập AppIDs trước khi quét", "Cảnh báo");
                    return;
                }
                
                // Hiển thị trạng thái đang xử lý
                const originalText = $(this).html();
                $(this).prop("disabled", true).html('<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Đang quét...');
                
                // Gọi API để quét AppIDs
                $.ajax({
                    url: "?handler=ScanAppIds",
                    type: "POST",
                    data: { appIds: appIds },
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function(response) {
                        $("#btnEditScanAppIds").prop("disabled", false).html(originalText);
                        
                        if (response.success) {
                            // Cập nhật trường GameNames
                            $("#editGameNames").val(response.gameNames);
                            toastr.success(`Đã quét thành công ${response.results.length} game!`, "Thành công");
                        } else {
                            toastr.error(response.message || "Không thể quét AppIDs", "Lỗi");
                        }
                    },
                    error: function() {
                        $("#btnEditScanAppIds").prop("disabled", false).html(originalText);
                        toastr.error("Có lỗi xảy ra khi quét AppIDs", "Lỗi");
                    }
                });
            });
        });
    </script>
}